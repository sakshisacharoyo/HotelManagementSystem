commands:
  create-post-dir:
    command: "mkdir -p /opt/elasticbeanstalk/hooks/appdeploy/pre"
    ignoreErrors: true

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/pre_deploy_hooks.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      # Loading environment data
      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)
      EB_ENV_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k container_staging_dir)
      . $EB_ENV_DIR/elasticbeanstalk.env

      touch /mnt/logs/hms.log

      chown $EB_APP_USER:$EB_APP_USER /mnt/logs/hms.log

      echo "Getting inside check"
      if [ "$HMS_ENV" = "staging" ]; then
      echo "Inside $HMS_ENV environment"

      #install logstash if not present
      cd /root

      if [ ! -d "logstash-2.4.0" ] ; then
          wget https://download.elasticsearch.org/logstash/logstash/logstash-2.4.0.tar.gz
          tar zxvf logstash-2.4.0.tar.gz
      fi

      touch /root/logstash-2.4.0/logstash.conf

      cat <<EOF > /root/logstash-2.4.0/logstash.conf
        input {
          file {
              type => "hms_log"
              path => "/mnt/logs/hms.log"
              sincedb_path => "/root/.hms_sincedb"
              codec => multiline {
                pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
                negate => "true"
                what => "previous"
              }
          }
        }
        filter {
          if [type] == 'hms_log' {
            if [message] =~ "\tat" {
              grok {
                match => ["message", "^(\tat)"]
                add_tag => ["stacktrace"]
              }
            }
            grok {
              match => [ "message",
                         "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\s+%{LOGLEVEL:level}\s+%{NUMBER:pid} --- \[(?<thread>[A-Za-z0-9-]+)\] [A-Za-z0-9.]*\.(?<class>[A-Za-z0-9#_]+)\s*:\s+(?<logmessage>.*)",
                         "message",
                         "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\s+%{LOGLEVEL:level}\s+%{NUMBER:pid} --- .+?\s*:\s+(?<logmessage>.*)"
                       ]
            }
            date {
              match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
            }
          }
        }
      EOF
      fi
